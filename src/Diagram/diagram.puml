@startuml
skinparam linetype ortho

' === DatabaseConnection ===
class DatabaseConnection {
    +{static} getConnection(): Connection
}

' === Pengguna ===
class Pengguna {
    - pid: String
    - nbid: String
    - namaLengkap: String
    - noRek: String
    - saldo: double
    - bank: String
    - pin: String
    - email: String
    - noHP: String
    - username: String

    + Pengguna(pid: String, nbid: String, namaLengkap: String, noRek: String, saldo: double, bank: String, pin: String, email: String, noHP: String, username: String)
    + getPID(): String
    + setPID(pid: String): void
    + getNBID(): String
    + setNBID(nbid: String): void
    + getNamaLengkap(): String
    + setNamaLengkap(namaLengkap: String): void
    + getNoRek(): String
    + setNoRek(noRek: String): void
    + getSaldo(): double
    + setSaldo(saldo: double): void
    + getPIN(): String
    + setPIN(pin: String): void
    + getEmail(): String
    + setEmail(email: String): void
    + getNoHP(): String
    + setNoHP(noHP: String): void
    + getBank(): String
    + getUsername(): String
    + setUsername(username: String): void
    + getNamaPertama(): String
}

' === Transfer ===
class Transfer {
    - noRekTujuan: String
    - bankTujuan: String
    - namaPenerima: String
    - pengirim: Pengguna
    - nominal: double

    + Transfer(pengirim: Pengguna, noRekPenerima: String, bankPenerima: String, nominal: double)
    + getNoRekPenerima(): String
    + getBankPenerima(): String
    + getNominal(): double
    + getNamaPenerima(): String
    + getPengirim(): Pengguna
    + setNamaPenerima(namaPenerima: String): void
}

' === EWallet ===
class EWallet {
    - pengirim: Pengguna
    - nominal: double
    - noHpTujuan: String
    - namaWallet: String
    - namaPenerima: String

    + EWallet(pengirim: Pengguna, namaWallet: String, noHpTujuan: String, inputNominal: String)
    + getPengirim(): Pengguna
    + getNoHpTujuan(): String
    + getNamaWallet(): String
    + getNamaPenerima(): String
    + setNamaPenerima(namaPenerima: String): void
    + getNominal(): double
}

' === Riwayat ===
abstract class Riwayat {
    # nominal: double
    # namaPengirim: String
    # namaPenerima: String
    # tanggal: LocalDate
    # waktu: LocalTime

    + Riwayat(nominal: double, namaPengirim: String, namaPenerima: String, tanggal: LocalDate, waktu: LocalTime)
    + getNominal(): double
    + getNamaPengirim(): String
    + getNamaPenerima(): String
    + getTanggal(): LocalDate
    + getWaktu(): LocalTime
    + getJenis(): String
    + getDetailTujuan(): String
}

' === Riwayat Transfer ===
class RiwayatTransfer extends Riwayat {
    - noRekPengirim: String
    - noRekPenerima: String
    - bankPengirim: String
    - bankPenerima: String

    + RiwayatTransfer(noRekPengirim: String, noRekPenerima: String, bankPengirim: String, bankPenerima: String, nominal: double, namaPengirim: String, namaPenerima: String, tanggal: LocalDate, waktu: LocalTime)
    + getJenis(): String
    + getDetailTujuan(): String
    + getNoRekPengirim(): String
    + getNoRekPenerima(): String
    + getBankPengirim(): String
    + getBankPenerima(): String
}

' === Riwayat Top Up===
class RiwayatTopUp extends Riwayat {
    - noRekPengirim: String
    - noHpPenerima: String
    - jenisEWallet: String

    + RiwayatTopUp(noRekPengirim: String, noHpPenerima: String, jenisEWallet: String, nominal: double, namaPengirim: String, namaPenerima: String, tanggal: LocalDate, waktu: LocalTime)
    + getJenis(): String
    + getDetailTujuan(): String
    + getNoRekPengirim(): String
    + getJenisEWallet(): String
}

' === Dao Classes ====
class RiwayatDao {
    +{static} simpanRiwayatTransfer(conn: Connection, riwayat: RiwayatTransfer): void
    +{static} simpanRiwayatTopUp(conn: Connection, riwayat: RiwayatTopUp, noHpPenerima: String, jenisEWallet: String): void
    +{static} getSemuaRiwayatByNoRek(noRek: String): List<Riwayat>
}

class PenggunaDao {
    +{static} login(username: String, password: String): Pengguna
    +{static} verifikasiDataAwal(nama: String, nik: String, noRek: String, pin: String, noHP: String, email: String): String
    +{static} buatAkun(username: String, password: String, npid: String): boolean
    +{static} getSaldoBaru(pengguna: Pengguna): double
}

class TransferDao {
    +{static} validasiTransfer(transfer: Transfer): boolean
    +{static} prosesTransfer(transfer: Transfer, pengirimNBID: String, pinInput: String, PIN: String): boolean
    +{static} simpanKeRiwayatTransfer(conn: Connection, transfer: Transfer): void
}

class EWalletDao {
    +{static} validasiTopUp(wallet: EWallet): boolean
    +{static} prosesTopUp(wallet: EWallet): boolean
    +{static} simpanKeRiwayatTopUp(conn: Connection, wallet: EWallet): void
}

' === Relations ===
Transfer "1" <-- "1" Pengguna : menggunakan
EWallet "1" <-- "1" Pengguna : menggunakan
Riwayat <|-- RiwayatTransfer : mewarisi
Riwayat <|-- RiwayatTopUp : mewarisi
DatabaseConnection <.. RiwayatDao : menggunakan
RiwayatDao ..> RiwayatTransfer : menyimpan
RiwayatDao ..> RiwayatTopUp : menyimpan
RiwayatDao ..> Riwayat : mengembalikan
DatabaseConnection <.. PenggunaDao : menggunakan
PenggunaDao ..> Pengguna : menggunakan/menghasilkan
DatabaseConnection <.. TransferDao : menggunakan
TransferDao ..> Transfer : menggunakan
TransferDao ..> RiwayatDao : memanggil
TransferDao ..> RiwayatTransfer : membuat
DatabaseConnection <.. EWalletDao : menggunakan
EWalletDao ..> EWallet : menggunakan
EWalletDao ..> RiwayatTopUp : membuat
EWalletDao ..> RiwayatDao : memanggil
@enduml